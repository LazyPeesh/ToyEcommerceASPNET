// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ToyEcommerceASPNET.Data;

#nullable disable

namespace ToyEcommerceASPNET.Migrations
{
    [DbContext(typeof(APIDbContext))]
    [Migration("20231006125717_initial create")]
    partial class initialcreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ToyEcommerceASPNET.Models.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("PathName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("ToyEcommerceASPNET.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<double>("Ratings")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = "",
                            Description = "No Content",
                            Name = "Diable 2: Resurrected",
                            Price = 9.9900000000000002,
                            Quantity = 4,
                            Ratings = 3.0
                        },
                        new
                        {
                            Id = 2,
                            Category = "",
                            Description = "No Content",
                            Name = "The Matrix",
                            Price = 9.9900000000000002,
                            Quantity = 4,
                            Ratings = 3.0
                        },
                        new
                        {
                            Id = 3,
                            Category = "",
                            Description = "No Content",
                            Name = "Super Nintendo",
                            Price = 9.9900000000000002,
                            Quantity = 4,
                            Ratings = 3.0
                        },
                        new
                        {
                            Id = 4,
                            Category = "",
                            Description = "No Content",
                            Name = "Back to the Future",
                            Price = 9.9900000000000002,
                            Quantity = 4,
                            Ratings = 3.0
                        },
                        new
                        {
                            Id = 5,
                            Category = "",
                            Description = "No Content",
                            Name = "Ready or Not",
                            Price = 9.9900000000000002,
                            Quantity = 4,
                            Ratings = 3.0
                        },
                        new
                        {
                            Id = 6,
                            Category = "",
                            Description = "No Content",
                            Name = "1984",
                            Price = 9.9900000000000002,
                            Quantity = 4,
                            Ratings = 3.0
                        },
                        new
                        {
                            Id = 7,
                            Category = "",
                            Description = "No Content",
                            Name = "Brave New World",
                            Price = 9.9900000000000002,
                            Quantity = 4,
                            Ratings = 3.0
                        },
                        new
                        {
                            Id = 8,
                            Category = "",
                            Description = "No Content",
                            Name = "A Nightmare on Elm Street",
                            Price = 9.9900000000000002,
                            Quantity = 4,
                            Ratings = 3.0
                        },
                        new
                        {
                            Id = 9,
                            Category = "",
                            Description = "No Content",
                            Name = "Awakenings ",
                            Price = 9.9900000000000002,
                            Quantity = 4,
                            Ratings = 3.0
                        },
                        new
                        {
                            Id = 10,
                            Category = "",
                            Description = "No Content",
                            Name = "A League of Their Own",
                            Price = 9.9900000000000002,
                            Quantity = 4,
                            Ratings = 3.0
                        });
                });

            modelBuilder.Entity("ToyEcommerceASPNET.Models.Image", b =>
                {
                    b.HasOne("ToyEcommerceASPNET.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });
#pragma warning restore 612, 618
        }
    }
}
