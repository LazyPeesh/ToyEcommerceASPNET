// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ToyEcommerceASPNET.Data;

#nullable disable

namespace ToyEcommerceASPNET.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231006160552_initialCreate")]
    partial class initialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ToyEcommerceASPNET.Models.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<int>("PaymentMethod")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Transactions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 9.9900000000000002,
                            PaymentMethod = 1,
                            Status = 1,
                            Timestamp = new DateTime(2023, 10, 6, 23, 5, 52, 504, DateTimeKind.Local).AddTicks(300),
                            Type = "Test"
                        },
                        new
                        {
                            Id = 2,
                            Amount = 9.9900000000000002,
                            PaymentMethod = 1,
                            Status = 1,
                            Timestamp = new DateTime(2023, 10, 6, 23, 5, 52, 504, DateTimeKind.Local).AddTicks(311),
                            Type = "Test"
                        },
                        new
                        {
                            Id = 3,
                            Amount = 9.9900000000000002,
                            PaymentMethod = 1,
                            Status = 1,
                            Timestamp = new DateTime(2023, 10, 6, 23, 5, 52, 504, DateTimeKind.Local).AddTicks(312),
                            Type = "Test"
                        },
                        new
                        {
                            Id = 4,
                            Amount = 9.9900000000000002,
                            PaymentMethod = 1,
                            Status = 1,
                            Timestamp = new DateTime(2023, 10, 6, 23, 5, 52, 504, DateTimeKind.Local).AddTicks(312),
                            Type = "Test"
                        },
                        new
                        {
                            Id = 5,
                            Amount = 9.9900000000000002,
                            PaymentMethod = 1,
                            Status = 1,
                            Timestamp = new DateTime(2023, 10, 6, 23, 5, 52, 504, DateTimeKind.Local).AddTicks(313),
                            Type = "Test"
                        },
                        new
                        {
                            Id = 6,
                            Amount = 9.9900000000000002,
                            PaymentMethod = 1,
                            Status = 1,
                            Timestamp = new DateTime(2023, 10, 6, 23, 5, 52, 504, DateTimeKind.Local).AddTicks(314),
                            Type = "Test"
                        },
                        new
                        {
                            Id = 7,
                            Amount = 9.9900000000000002,
                            PaymentMethod = 1,
                            Status = 1,
                            Timestamp = new DateTime(2023, 10, 6, 23, 5, 52, 504, DateTimeKind.Local).AddTicks(314),
                            Type = "Test"
                        },
                        new
                        {
                            Id = 8,
                            Amount = 9.9900000000000002,
                            PaymentMethod = 1,
                            Status = 1,
                            Timestamp = new DateTime(2023, 10, 6, 23, 5, 52, 504, DateTimeKind.Local).AddTicks(315),
                            Type = "Test"
                        },
                        new
                        {
                            Id = 9,
                            Amount = 9.9900000000000002,
                            PaymentMethod = 1,
                            Status = 1,
                            Timestamp = new DateTime(2023, 10, 6, 23, 5, 52, 504, DateTimeKind.Local).AddTicks(315),
                            Type = "Test"
                        },
                        new
                        {
                            Id = 10,
                            Amount = 9.9900000000000002,
                            PaymentMethod = 1,
                            Status = 1,
                            Timestamp = new DateTime(2023, 10, 6, 23, 5, 52, 504, DateTimeKind.Local).AddTicks(316),
                            Type = "Test"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
